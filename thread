https://www.cs.cmu.edu/afs/cs/academic/class/15492-f07/www/pthreads.html


//header file
#include "apue.h"
#include <pthread.h>

//giving pthread_t(system call a variable named ntid)
pthread_t ntid;


//calling the pointer function to which thread should work

void
printids(const char *s)

//giving the structure value for the thread initialization and getting user id and process id of the main thread and self called thread

{
    pid_t       pid;
    pthread_t   tid;

    pid = getpid();
    tid = pthread_self();
    printf("%s pid %lu tid %lu (0x%lx)\n", s, (unsigned long)pid,
      (unsigned long)tid, (unsigned long)tid);
}

//calling the argument to get the new thread id 
void *
thr_fn(void *arg)
{
    printids("new thread: ");
    return((void *)0);
}

int
main(void)

//creation of thread using thread id(ntid), attr having thread reseouce as NULL , at the address of thr_fun(function) , storing the thr_fun in NULL argument
{
    int     err;

    err = pthread_create(&ntid, NULL, thr_fn, NULL);
    if (err != 0)
        err_exit(err, "can't create thread");
    printids("main thread:");
    sleep(1);
    exit(0);
}
